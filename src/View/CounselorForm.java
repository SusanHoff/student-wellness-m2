package View;

/**
 *
 * @author susan
 */
import Controller.CounselorController;
import Model.Counselor;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
//import Database.DBConnection;


public class CounselorForm extends javax.swing.JFrame {

    CounselorController controller = new CounselorController();
    
    //to store user passwords temporarily, if they don't add a new one during update
    private String currentPassword = "";
 
    public CounselorForm() {

        initComponents();    
        setTableColumnHeaders();
        
        // SET COMBOBOX VALUES
        comboSpecialisation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
        "Carreer Guidance", "Trauma", "Academic Stress", "Anxiety", "Depression"
        }));
        comboAvail.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
        "Mon-Fri, 09:00-17:00", "Mon–Wed 08:00–16:00", "Tue–Fri 10:00–14:00", "Mon,Wed,Fri 12:00–18:00", "Mon–Thu 09:00–13:00","Weekends only"
        }));
        
       loadCounselors();
       
       
       
       
       // Populate form fields when a table row is clicked
        tblCounselors.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
        int row = tblCounselors.getSelectedRow();
        if (row != -1) {
            txtId.setText(tblCounselors.getValueAt(row, 0).toString());
            txtName.setText(tblCounselors.getValueAt(row, 1).toString());
            txtSurname.setText(tblCounselors.getValueAt(row, 2).toString());
            txtEmail.setText(tblCounselors.getValueAt(row, 3).toString());
            txtPhone.setText(tblCounselors.getValueAt(row, 4).toString());
            txtPassword.setText(""); // Don't show password
            String id = tblCounselors.getValueAt(row, 0).toString();
            for (Counselor c : controller.getAllCounselors()) {
            if (c.getId().equals(id)) {
            currentPassword = c.getPassword(); // Store the actual password
            break;
    }
}
            comboSpecialisation.setSelectedItem(tblCounselors.getValueAt(row, 6).toString());
            comboAvail.setSelectedItem(tblCounselors.getValueAt(row, 7).toString());
        }
    }
});


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    //To populate jTable in Form View
        private void loadCounselors() {
        DefaultTableModel model = (DefaultTableModel) tblCounselors.getModel();
        model.setRowCount(0); // Clear previous data

        for (Counselor c : controller.getAllCounselors()) {
            model.addRow(new Object[]{
                c.getId(),
                c.getName(),
                c.getSurname(),
                c.getEmail(),
                c.getPhone(),
                "null", // hide password
                c.getSpecialisation(),
                c.getAvailable()
            });
        }
    }
        //TO SET CUSTOM TABLE HEADINGS
        private void setTableColumnHeaders() {
        tblCounselors.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {},
        new String [] {
            "ID", "Name", "Surname", "Email", "Phone", "Password", "Specialisation", "Availability"
        }
    ));
}

        
        
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        lblID = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCounselors = new javax.swing.JTable();
        lblHeading = new javax.swing.JLabel();
        lblID1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblID2 = new javax.swing.JLabel();
        txtSurname = new javax.swing.JTextField();
        lblID3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblID4 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblID5 = new javax.swing.JLabel();
        lblSpec = new javax.swing.JLabel();
        lblAvail = new javax.swing.JLabel();
        comboSpecialisation = new javax.swing.JComboBox<>();
        comboAvail = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        btnFilterBySpecialisation = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAdd.setText("Add");
        btnAdd.setName(""); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblID.setLabelFor(txtId);
        lblID.setText("ID");

        txtId.setToolTipText("");

        tblCounselors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCounselors);

        lblHeading.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading.setText("Counselor Management");

        lblID1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblID1.setLabelFor(txtName);
        lblID1.setText("Name");

        txtName.setToolTipText("");

        lblID2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblID2.setLabelFor(txtSurname);
        lblID2.setText("Surname");

        txtSurname.setToolTipText("");

        lblID3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblID3.setLabelFor(txtEmail);
        lblID3.setText("Email");

        txtEmail.setToolTipText("");

        lblID4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblID4.setLabelFor(txtPhone);
        lblID4.setText("Phone");

        txtPhone.setToolTipText("");

        lblID5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblID5.setLabelFor(txtPassword);
        lblID5.setText("Password");

        lblSpec.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSpec.setLabelFor(comboSpecialisation);
        lblSpec.setText("Specialisation");

        lblAvail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvail.setLabelFor(comboAvail);
        lblAvail.setText("Availibility");

        comboSpecialisation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboAvail.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnUpdate.setText("Update");
        btnUpdate.setName(""); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setName(""); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.setName(""); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnView.setText("View all");
        btnView.setName(""); // NOI18N
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        txtPassword.setText("jPasswordField1");

        btnFilterBySpecialisation.setText("Filter Specialisation");
        btnFilterBySpecialisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterBySpecialisationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblID3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblID4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblID1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblID2)
                .addComponent(lblID5))
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(lblAvail)
                        .addGap(18, 18, 18)
                        .addComponent(comboAvail, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addComponent(lblSpec))
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboSpecialisation, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFilterBySpecialisation)))))
            .addContainerGap(32, Short.MAX_VALUE))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(btnAdd)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnUpdate)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnDelete)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnClear)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnView)
            .addGap(50, 50, 50))
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(156, 156, 156)
            .addComponent(lblHeading)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
);

        jPanel1Layout.setVerticalGroup(
    jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(lblHeading)
        .addGap(32, 32, 32)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID2)
                    .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID3)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboAvail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAvail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID4)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID5)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpec)
                    .addComponent(comboSpecialisation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnFilterBySpecialisation)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(btnAdd)
            .addComponent(btnUpdate)
            .addComponent(btnDelete)
            .addComponent(btnClear)
            .addComponent(btnView))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
);



        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
);
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean validateInput(boolean checkDuplicateId, boolean requirePassword) {
        //get text from fields
    String id = txtId.getText().trim();
    String name = txtName.getText().trim();
    String surname = txtSurname.getText().trim();
    String email = txtEmail.getText().trim();
    String phone = txtPhone.getText().trim();
    String password = new String(txtPassword.getPassword()).trim();

    // Checks for empty fields - except password and id for update
    if (id.isEmpty() || name.isEmpty() || surname.isEmpty() || email.isEmpty()
        || phone.isEmpty() || (requirePassword && password.isEmpty())) {
    JOptionPane.showMessageDialog(this, "Please fill in all required fields.");
    return false;
}

    // Email format
    if (!email.contains("@")) {
        JOptionPane.showMessageDialog(this, "Invalid email address.");
        return false;
    }

    // Phone number numeric
    if (!phone.matches("\\d+")) {
        JOptionPane.showMessageDialog(this, "Phone number must be digits only.");
        return false;
    }

    // Check for duplicate ID, unless current counselor is being updated
    if (checkDuplicateId) {
    for (Counselor c : controller.getAllCounselors()) {
        if (c.getId().equals(id)) {
            JOptionPane.showMessageDialog(this, "ID already exists. Please use a unique ID.");
            return false;
        }
    }
}

    return true;
}

    
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!validateInput(true, true)) return;
        
        String id = txtId.getText();
        String name = txtName.getText();
        String surname = txtSurname.getText();
        String email = txtEmail.getText();
        String phone = txtPhone.getText();
        String password = new String(txtPassword.getPassword());
        String specialisation = comboSpecialisation.getSelectedItem().toString();
        String available = comboAvail.getSelectedItem().toString();

        controller.addCounselor(id, name, surname, email, phone, password, specialisation, available);
       loadCounselors();
       JOptionPane.showMessageDialog(this, "Counselor added successfully.");


    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    int row = tblCounselors.getSelectedRow();
    if (row != -1) {
        if (!validateInput(false, false)) return;

        String id = txtId.getText();
        String name = txtName.getText();
        String surname = txtSurname.getText();
        String email = txtEmail.getText();
        String phone = txtPhone.getText();
        String password = new String(txtPassword.getPassword());

        // Reuse old password if the field is blank
        if (password.isEmpty()) {
            password = currentPassword;
        }

        String specialisation = comboSpecialisation.getSelectedItem().toString();
        String available = comboAvail.getSelectedItem().toString();

        controller.updateCounselor(id, name, surname, email, phone, password, specialisation, available);
        loadCounselors();
        JOptionPane.showMessageDialog(this, "Counselor updated successfully.");
    } else {
        JOptionPane.showMessageDialog(this, "Please select a counselor to update.");
    }
        

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         int row = tblCounselors.getSelectedRow();
    if (row != -1) {
        String id = tblCounselors.getValueAt(row, 0).toString();

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this counselor?", 
                                                    "Confirm Deletion", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            controller.deleteCounselor(id);
            loadCounselors();
            JOptionPane.showMessageDialog(this, "Counselor deleted successfully.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a counselor to delete.");
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtId.setText("");
        txtName.setText("");
        txtSurname.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtPassword.setText("");
        comboSpecialisation.setSelectedIndex(0);
        comboAvail.setSelectedIndex(0);
        currentPassword = "";


    }//GEN-LAST:event_btnClearActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
       loadCounselors();
        JOptionPane.showMessageDialog(this, "Counselor list refreshed.");
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnFilterBySpecialisationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterBySpecialisationActionPerformed
        String selectedSpec = comboSpecialisation.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) tblCounselors.getModel();
        model.setRowCount(0);

        for (Counselor c : controller.getAllCounselors()) {
            if (c.getSpecialisation().equals(selectedSpec)) {
                model.addRow(new Object[]{
                    c.getId(),
                    c.getName(),
                    c.getSurname(),
                    c.getEmail(),
                    c.getPhone(),
                    "null",
                    c.getSpecialisation(),
                    c.getAvailable()
                });
            }
        }
    }//GEN-LAST:event_btnFilterBySpecialisationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CounselorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CounselorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CounselorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CounselorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CounselorForm().setVisible(true);
            }
        });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFilterBySpecialisation;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> comboAvail;
    private javax.swing.JComboBox<String> comboSpecialisation;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvail;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblID1;
    private javax.swing.JLabel lblID2;
    private javax.swing.JLabel lblID3;
    private javax.swing.JLabel lblID4;
    private javax.swing.JLabel lblID5;
    private javax.swing.JLabel lblSpec;
    private javax.swing.JTable tblCounselors;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSurname;
    // End of variables declaration//GEN-END:variables
}
